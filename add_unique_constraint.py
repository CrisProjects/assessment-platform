#!/usr/bin/env python3
"""
Script para agregar constraint √∫nico a assessment_result
para prevenir duplicaciones de user_id + assessment_id
"""
import os
import sys
from sqlalchemy import text

# Agregar el directorio actual al path para importar el app
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# Importar la aplicaci√≥n Flask y modelos
from app import app, db

def main():
    with app.app_context():
        print("üöÄ Agregando constraint √∫nico a assessment_result...")
        
        try:
            # Verificar si ya existe el constraint
            result = db.session.execute(text("""
                SELECT name FROM sqlite_master 
                WHERE type='index' 
                AND tbl_name='assessment_result' 
                AND name LIKE '%unique%'
            """)).fetchall()
            
            if result:
                print("‚ÑπÔ∏è  Ya existe un constraint √∫nico")
                for row in result:
                    print(f"   - {row[0]}")
                return
            
            # Crear √≠ndice √∫nico para prevenir duplicados
            print("üìù Creando constraint √∫nico...")
            db.session.execute(text("""
                CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_user_assessment 
                ON assessment_result(user_id, assessment_id)
            """))
            
            db.session.commit()
            print("‚úÖ Constraint √∫nico creado exitosamente")
            print("üîí Ahora es imposible crear duplicados de user_id + assessment_id")
            
            # Verificar que se cre√≥ correctamente
            result = db.session.execute(text("""
                SELECT name FROM sqlite_master 
                WHERE type='index' 
                AND tbl_name='assessment_result' 
                AND name='idx_unique_user_assessment'
            """)).fetchall()
            
            if result:
                print("‚úÖ Verificaci√≥n exitosa - Constraint activo")
            else:
                print("‚ö†Ô∏è  Error: No se pudo verificar el constraint")
                
        except Exception as e:
            print(f"‚ùå Error creando constraint: {e}")
            db.session.rollback()

if __name__ == "__main__":
    main()
