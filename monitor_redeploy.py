#!/usr/bin/env python3
"""
Script para monitorear el redeploy de Render y verificar cuando est√© completo
"""
import requests
import time
import sys

def check_deployment():
    """Verificar el estado del deployment"""
    url = "https://assessment-platform-1nuo.onrender.com/"
    
    try:
        print(f"üîç Verificando {url}...")
        response = requests.get(url, timeout=10)
        
        print(f"üìä Status Code: {response.status_code}")
        
        # Verificar si es el index.html (deber√≠a contener "Plataforma de Evaluaci√≥n de Asertividad")
        content = response.text.lower()
        
        if "plataforma de evaluaci√≥n de asertividad" in content and "evaluaci√≥n de asertividad" in content:
            print("‚úÖ SUCCESS: index.html est√° siendo servido correctamente!")
            return True
        elif "login" in content and "iniciar sesi√≥n" in content:
            print("‚ö†Ô∏è  STILL OLD: A√∫n mostrando p√°gina de login")
            return False
        else:
            print("‚ùì UNKNOWN: Contenido no reconocido")
            print(f"Primeras 200 chars: {response.text[:200]}...")
            return False
            
    except requests.exceptions.Timeout:
        print("‚è∞ TIMEOUT: El servidor est√° tardando en responder (posible redeploy)")
        return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå ERROR: {e}")
        return False

def monitor_deployment(max_attempts=20, delay=15):
    """Monitorear el deployment durante un tiempo espec√≠fico"""
    print("üöÄ Iniciando monitoreo del redeploy de Render...")
    print(f"   Intentos m√°ximos: {max_attempts}")
    print(f"   Intervalo: {delay} segundos")
    print("=" * 50)
    
    for attempt in range(1, max_attempts + 1):
        print(f"\n[Intento {attempt}/{max_attempts}] {time.strftime('%H:%M:%S')}")
        
        if check_deployment():
            print("\nüéâ REDEPLOY COMPLETADO EXITOSAMENTE!")
            print("   La aplicaci√≥n est√° sirviendo el index.html correctamente.")
            return True
        
        if attempt < max_attempts:
            print(f"‚è≥ Esperando {delay} segundos antes del siguiente intento...")
            time.sleep(delay)
    
    print("\n‚ùå TIMEOUT: El redeploy no se complet√≥ en el tiempo esperado")
    print("   Posibles causas:")
    print("   - El redeploy est√° tomando m√°s tiempo del esperado")
    print("   - Hay un error en el c√≥digo que impide el despliegue")
    print("   - Problemas de conectividad")
    return False

if __name__ == "__main__":
    success = monitor_deployment()
    sys.exit(0 if success else 1)
